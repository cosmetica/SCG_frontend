{"remainingRequest":"/Users/pakkaphonpoloung/Documents/SCG_frontend/scg_frontend_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pakkaphonpoloung/Documents/SCG_frontend/scg_frontend_project/src/components/GoogleMapLoader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pakkaphonpoloung/Documents/SCG_frontend/scg_frontend_project/src/components/GoogleMapLoader.vue","mtime":1573661081000},{"path":"/Users/pakkaphonpoloung/Documents/SCG_frontend/scg_frontend_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pakkaphonpoloung/Documents/SCG_frontend/scg_frontend_project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/pakkaphonpoloung/Documents/SCG_frontend/scg_frontend_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/pakkaphonpoloung/Documents/SCG_frontend/scg_frontend_project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBHb29nbGVNYXBzQXBpTG9hZGVyIGZyb20gJ2dvb2dsZS1tYXBzLWFwaS1sb2FkZXInCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgbWFwQ29uZmlnOiBPYmplY3QsCiAgICBhcGlLZXk6IFN0cmluZywKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZ29vZ2xlOiBudWxsLAogICAgICBtYXA6IG51bGwKICAgIH0KICB9LAoKICBhc3luYyBtb3VudGVkKCkgewogICAgY29uc3QgZ29vZ2xlTWFwQXBpID0gYXdhaXQgR29vZ2xlTWFwc0FwaUxvYWRlcih7CiAgICAgIGFwaUtleTogdGhpcy5hcGlLZXkKICAgIH0pCiAgICB0aGlzLmdvb2dsZSA9IGdvb2dsZU1hcEFwaQogICAgdGhpcy5pbml0aWFsaXplTWFwKCkKICB9LAoKICBtZXRob2RzOiB7CiAgICBpbml0aWFsaXplTWFwKCkgewogICAgICBjb25zdCBtYXBDb250YWluZXIgPSB0aGlzLiRyZWZzLmdvb2dsZU1hcAogICAgICB0aGlzLm1hcCA9IG5ldyB0aGlzLmdvb2dsZS5tYXBzLk1hcCgKICAgICAgICBtYXBDb250YWluZXIsIHRoaXMubWFwQ29uZmlnCiAgICAgICkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["GoogleMapLoader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoogleMapLoader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"google-map\" ref=\"googleMap\"></div>\n    <template v-if=\"Boolean(this.google) && Boolean(this.map)\">\n      <slot\n        :google=\"google\"\n        :map=\"map\"\n      />\n    </template>\n  </div>\n</template>\n\n\n<script>\nimport GoogleMapsApiLoader from 'google-maps-api-loader'\nexport default {\n  props: {\n    mapConfig: Object,\n    apiKey: String,\n  },\n\n  data() {\n    return {\n      google: null,\n      map: null\n    }\n  },\n\n  async mounted() {\n    const googleMapApi = await GoogleMapsApiLoader({\n      apiKey: this.apiKey\n    })\n    this.google = googleMapApi\n    this.initializeMap()\n  },\n\n  methods: {\n    initializeMap() {\n      const mapContainer = this.$refs.googleMap\n      this.map = new this.google.maps.Map(\n        mapContainer, this.mapConfig\n      )\n    }\n  }\n}\n</script>"]}]}